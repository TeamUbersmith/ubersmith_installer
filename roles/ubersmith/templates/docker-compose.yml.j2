version: '2'
services:
  solr:
    image: quay.io/ubersmith/solr:{{ containers.solr_version }}
    hostname: solr.{{ virtual_host }}
    restart: unless-stopped
    volumes:
      - "search:/opt/solr"
  db:
    image: quay.io/ubersmith/db:{{ containers.db_version }}
    hostname: database.{{ virtual_host }}
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
      MYSQL_USER: ubersmith
      MYSQL_PASSWORD: "{{ mysql_ubersmith_password }}"
      MYSQL_DATABASE: ubersmith
    volumes:
      - "database:/var/lib/mysql"
      - "/etc/mysql/conf.d"
  web:
    image: quay.io/ubersmith/ubersmith:{{ containers.web_version }}
    hostname: {{ virtual_host }}
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      MYSQL_USER: ubersmith
      MYSQL_PASSWORD: "{{ mysql_ubersmith_password }}"
      MYSQL_DATABASE: ubersmith
      DATABASE_HOST: "ubersmith_db_1"
      UBER_HOSTNAME: {{ virtual_host }}
      LOCK_BACKEND: mysql
      MAINTENANCE: 0
      HTTPS_FORCE: 1
    volumes:
      - "logs:/var/www/ubersmith_root/logs"
      - "webroot:/var/www/ubersmith_root"
    volumes_from:
      - solr
  php:
    image: quay.io/ubersmith/php:{{ containers.php_version }}
    hostname: {{ virtual_host }}
    restart: unless-stopped
    volumes_from:
      - web
  cron:
    image: quay.io/ubersmith/cron:{{ containers.cron_version }}
    hostname: {{ virtual_host }}
    restart: unless-stopped
    volumes_from:
      - web
  mail:
    image: quay.io/ubersmith/mail:{{ containers.mail_version }}
    hostname: {{ virtual_host }}
    restart: unless-stopped
    ports:
      - "25:25"
    volumes:
      - "mail:/var/log"
      - "mailspool:/var/spool/postfix"
    volumes_from:
      - web
  rwhois:
    image: quay.io/ubersmith/xinetd:{{ containers.rwhois_version }}
    hostname: {{ virtual_host }}
    restart: unless-stopped
    ports:
      - "4321:4321"
    volumes_from:
      - web
  backup:
    image: quay.io/ubersmith/xtrabackup:{{ containers.backup_version }}
    hostname: backups.{{ virtual_host }}
    environment:
      MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
      DATABASE_HOST: ubersmith_db_1
    volumes:
      - "backup:/backup"
    volumes_from:
      - db
    depends_on:
      - db
      
volumes:
  backup: {}
  database: {}
  logs: {}
  mail: {}
  mailspool: {}
  search: {}
  webroot: {}