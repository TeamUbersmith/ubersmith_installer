services:
  solr:
    image: {{ registry }}/solr:{{ ubersmith_version }}-{{ containers_release_version }}
    hostname: "solr.${ CONTAINER_DOMAIN }"
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - "search:/opt/solr"
{% if ansible_os_family != 'Darwin' %}
    logging:
      driver: syslog
      options:
        tag: ubersmith/solr
{% endif %}
  db:
    image: {{ registry }}/ps{{ ubersmith_release[ubersmith_major_version].mysql_version }}:{{ ubersmith_version }}-{{ containers_release_version }}
    hostname: "database.${ CONTAINER_DOMAIN }"
    restart: unless-stopped
    ports:
      - "127.0.0.1:3306:3306"
    environment:
      MYSQL_USER: ubersmith
      MYSQL_DATABASE: ubersmith
      MYSQL_ROOT_PASSWORD: "${ MYSQL_ROOT_PASSWORD }"
      MYSQL_PASSWORD: "${ MYSQL_PASSWORD }"
    volumes:
      - "database:/var/lib/mysql"
      - "/etc/mysql/conf.d"
      - "{{ ubersmith_home }}/conf/mysql:/etc/ubersmith.conf.d"
{% if ansible_os_family != 'Darwin' %}
    logging:
      driver: syslog
      options:
        tag: ubersmith/db
{% endif %}
  web:
    image: {{ registry }}/{{ ubersmith_release[ubersmith_major_version].containers.web_container_repo }}:{{ ubersmith_version }}-{{ containers_release_version }}
    hostname: "${ CONTAINER_DOMAIN }"
    restart: unless-stopped
    environment:
      MYSQL_USER: ubersmith
      MYSQL_DATABASE: ubersmith
      MYSQL_PASSWORD: "${ MYSQL_PASSWORD }"
      DATABASE_HOST: "db"
      UBER_HOSTNAME: "${ CONTAINER_DOMAIN }"
      LOCK_BACKEND: redis
      LOCK_SERVERS: "ubersmith-redis-1:6379:1,ubersmith-redis-2:6379:1,ubersmith-redis-3:6379:1"
      MAINTENANCE: "${ MAINTENANCE }"
      HTTPS_FORCE: 1
      REASON_LOG: 0
      STORAGE_BACKEND: redis
      REDIS_HOST: tcp://ubersmith-redis-data-1:6379?database=2
      SESSION_HOST: tcp://ubersmith-redis-data-1:6379?database=0
      PLUGIN_LOG_HOST: tcp://ubersmith-redis-data-1:6379?database=3
      QUEUE_HOST: tcp://ubersmith-redis-data-1:6379?database=4
      APPLIANCE_TIMEOUT: 30
      ALIPAY_ENABLE: 1
      OPENSSL_CIPHERS: {{ mozilla_ciphers.configurations.intermediate.ciphers.openssl | join(':') }}
    volumes:
      - "logs:/var/www/ubersmith_root/logs"
      - "webroot:/var/www/ubersmith_root"
      - "search:/opt/solr"
    depends_on:
      - redis-data
{% if ansible_os_family != 'Darwin' %}
    logging:
      driver: syslog
      options:
        tag: ubersmith/web
{% endif %}
  php:
    image: {{ registry }}/php{{ ubersmith_release[ubersmith_major_version].php_version }}:{{ ubersmith_version }}-{{ containers_release_version }}
    hostname: "${ CONTAINER_DOMAIN }"
    restart: unless-stopped
    volumes:
      - "{{ ubersmith_home }}/logs/rsyslog/log:/dev/log"
      - "logs:/var/www/ubersmith_root/logs"
      - "webroot:/var/www/ubersmith_root"
    depends_on:
      web:
        condition: service_started
      rsyslog:
        condition: service_healthy
{% if ansible_os_family != 'Darwin' %}
    logging:
      driver: syslog
      options:
        tag: ubersmith/php
{% endif %}
  cron:
    image: {{ registry }}/cron:{{ ubersmith_version }}-{{ containers_release_version }}
    hostname: "${ CONTAINER_DOMAIN }"
    restart: unless-stopped
    volumes:
      - "logs:/var/www/ubersmith_root/logs"
      - "webroot:/var/www/ubersmith_root"
    depends_on:
      - web
{% if ansible_os_family != 'Darwin' %}
    logging:
      driver: syslog
      options:
        tag: ubersmith/cron
{% endif %}
  mail:
    image: {{ registry }}/mail:{{ ubersmith_version }}-{{ containers_release_version }}
    hostname: "${ CONTAINER_DOMAIN }"
    restart: unless-stopped
    ports:
      - "25:25"
    volumes:
      - "logs:/var/www/ubersmith_root/logs"
      - "webroot:/var/www/ubersmith_root"
    networks:
      default:
        aliases:
          - ubersmith.mail
    depends_on:
      - web
      - clamav
{% if ansible_os_family != 'Darwin' %}
    logging:
      driver: syslog
      options:
        tag: ubersmith/mail
{% endif %}
  rwhois:
    image: {{ registry }}/xinetd:{{ ubersmith_version }}-{{ containers_release_version }}
    hostname: "${ CONTAINER_DOMAIN }"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    restart: unless-stopped
    ports:
      - "4321:4321"
    volumes:
      - "webroot:/var/www/ubersmith_root"
    depends_on:
      - web
{% if ansible_os_family != 'Darwin' %}
    logging:
      driver: syslog
      options:
        tag: ubersmith/rwhois
{% endif %}
  redis:
    image: {{ registry }}/redis:{{ ubersmith_version }}-{{ containers_release_version }}
    restart: unless-stopped
  redis-data:
    image: {{ registry }}/redis:{{ ubersmith_version }}-{{ containers_release_version }}
    restart: unless-stopped
{% if ansible_os_family != 'Darwin' %}
    logging:
      driver: syslog
      options:
        tag: ubersmith/redis-data
{% endif %}
    volumes:
      - redis:/data
  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: "no"
    hostname: "rediscommander.${ CONTAINER_DOMAIN }"
    environment:
      REDIS_HOSTS: default:ubersmith-redis-data-1:6379:3
  backup:
    image: {{ registry }}/xtrabackup{{ ubersmith_release[ubersmith_major_version].backup_version }}:{{ ubersmith_version }}-{{ containers_release_version }}
    hostname: "backups.${ CONTAINER_DOMAIN }"
    # entrypoint: /mysqldump.sh
    environment:
      DATABASE_HOST: db
      MYSQL_ROOT_PASSWORD: "${ MYSQL_ROOT_PASSWORD }"
    volumes:
      - "{{ ubersmith_home }}/backup:/backup"
      - "database:/var/lib/mysql"
    depends_on:
      - db
  rsyslog:
    image: {{ registry }}/rsyslog:{{ ubersmith_version }}-{{ containers_release_version }}
    hostname: "rsyslog.${ CONTAINER_DOMAIN }"
    volumes:
      - "{{ ubersmith_home }}/logs/rsyslog/:/var/run/rsyslog/dev/"
{% if ansible_os_family != 'Darwin' %}
    logging:
      driver: syslog
      options:
        tag: ubersmith/ubersmith
{% endif %}
  pmm:
    image: percona/pmm-server:{{ pmm_version }}
    hostname: "pmm.${ CONTAINER_DOMAIN }"
    ports:
      - "8443:443"
    volumes:
       - pmm-data:/srv
       - "{{ ubersmith_home }}/conf/ssl/${ CONTAINER_DOMAIN }.pem:/etc/nginx/ssl/server.crt"
       - "{{ ubersmith_home }}/conf/ssl/${ CONTAINER_DOMAIN }.key:/etc/nginx/ssl/server.key"
  haproxy:
    image: haproxy:{{ ubersmith_release[ubersmith_major_version].containers.haproxy_version }}
    volumes:
       - "{{ ubersmith_home }}/conf/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro"
    ports:
      - "3306"
      - "3307"
{% if ansible_os_family != 'Darwin' %}
    logging:
      driver: syslog
      options:
        tag: ubersmith/haproxy
{% endif %}
  certbot:
    image: certbot/certbot:{{ certbot_version }}
    # image: certbot/dns-nsone:{{ certbot_version }}
    # image: certbot/dns-cloudflare:{{ certbot_version }}
    command: "renew -vvv -n --webroot --webroot-path /var/www/ubersmith_root/app/www"
    # command: "certonly -n --standalone -d {{ virtual_hosts }} --agree-tos -m {{ notify_email }}"
    # command: "certonly --webroot -w /var/www/ubersmith_root/app/www -d {{ virtual_hosts }} --agree-tos -m {{ notify_email }}"
    # command: "certonly -d {{ virtual_hosts }} --agree-tos -m {{ notify_email }} --dns-nsone --dns-nsone-credentials /tmp/.nsone.ini"
    # command: "renew -vvv -n --agree-tos -m {{ notify_email }} --dns-cloudflare --dns-cloudflare-credentials /cf_token.ini --dns-cloudflare-propagation-seconds 60"
    volumes:
      - "{{ ubersmith_home }}/conf/certbot/etc:/etc/letsencrypt"
      - "{{ ubersmith_home }}/conf/certbot/lib:/var/lib/letsencrypt"
      - "{{ ubersmith_home }}/conf/certbot/log:/var/log/letsencrypt"
      - "{{ ubersmith_home }}/conf/ssl:/opt/certbot/deploy"
      - "webroot:/var/www/ubersmith_root"
{% if ansible_os_family != 'Darwin' %}
    logging:
      driver: syslog
      options:
        tag: ubersmith/certbot
{% endif %}
  falco:
    image: falcosecurity/falco-no-driver:latest
    restart: unless-stopped
    hostname: "falco.${ CONTAINER_DOMAIN }"
    privileged: true
    security_opt:
     - apparmor:unconfined
    logging:
      driver: syslog
      options:
        tag: ubersmith/falco
    tty: true
    volumes:
     - /var/run/docker.sock:/host/var/run/docker.sock
     - /proc:/host/proc:ro
     - /etc:/host/etc
     - "{{ ubersmith_home }}/conf/falco/falco_rules.local.yaml:/etc/falco/falco_rules.local.yaml"
    depends_on:
      web:
        condition: service_started
  clamav:
    image: clamav/clamav:1.3_base
    restart: unless-stopped
    hostname: "clamav.${ CONTAINER_DOMAIN }"
    volumes:
      - "clamav_signatures:/var/lib/clamav"
    logging:
      driver: syslog
      options:
        tag: ubersmith/clamav
volumes:
  clamav_signatures: {}
  database: {}
  logs: {}
  redis: {}
  search: {}
  webroot: {}
  pmm-data: {}
