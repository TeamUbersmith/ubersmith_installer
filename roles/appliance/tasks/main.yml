---
  
  # Create the directory structure required for Ubersmith to store configuration data
  # and other related files
  - name: create appliance configuration directories
    file: 
      path: "{{ item }}"
      state: directory
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_gid }}"
      mode: 0775
    with_items:
       - "{{ ubersmith_root }}/conf/mysql"
       - "{{ ubersmith_root }}/conf/cron"
       - "{{ ubersmith_root }}/conf/ssl"
       - "{{ ubersmith_root }}/logs"
       - "{{ ubersmith_root }}/logs/appliance"
    tags: 
      - mysql_config
      - httpd_config
      - upgrade

  # Get the system's timezone data for use in Docker Compose files     
  - shell: readlink -f /etc/localtime
    register: timezone_file
    tags:
      - compose_override_template

  # Create the main Docker Compose file, which defines Ubersmith services as containers
  # and includes their configurations. This file may change with every release.     
  - name: create docker compose file
    template:
      src: docker-compose.yml.j2
      dest: {{ ubersmith_root }}/docker-compose.yml
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_gid }}"
      mode: 0600
      backup: yes
    tags:
      - compose_template

  # Create the override Docker Compose file. This file contains site specific changes and
  # will not be modified by future upgrades.      
  - name: create docker compose override file
    template:
      src: docker-compose.override.yml.j2
      dest: {{ ubersmith_root }}/docker-compose.override.yml
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_gid }}"
      mode: 0600
      backup: yes
    tags:
      - compose_file
  
  # Copy a customer use token for downloading private Ubersmith images.
  - name: copy dockercfg
    copy:
      src: dot_dockercfg
      dest: /root/.dockercfg
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_gid }}"
      mode: 0600  

  # Copy a helper script which creates a backup of Ubersmith's RRDs. 
  - name: copy backup script
    copy:
      src: backup_rrds.sh
      dest: {{ ubersmith_root }}
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_gid }}"
      mode: 0700
  
  - name: run docker compose pull
    command: docker-compose -p ubersmith pull
    args:
      chdir:  {{ ubersmith_root }}
    tags:
      - compose_pull

  - name: run docker compose up -d
    command: docker-compose -p ubersmith up -d
    args:
      chdir:  {{ ubersmith_root }}
    tags:
      - compose_up